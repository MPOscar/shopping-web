image: docker:latest

stages:
  - build
  - deploy

cache:
  paths:
    - node_modules/

build_prod:
  stage: build
  image: node:8.11.3
  script:
    - export API_URL="http://moresneakers-api-prod.qufxpdyyni.eu-west-3.elasticbeanstalk.com/api/v1/"
    - npm install
    - npm run build-prod
    - echo "BUILD SUCCESSFULLY"
  artifacts:
    paths:
      - dist/
    expire_in: 20 mins
  environment:
    name: production
  only:
    - tags
  except:
    - branches

build_staging:
  stage: build
  image: node:8.11.3
  script:
    - export API_URL="http://moresneakers-api-staging.qufxpdyyni.eu-west-3.elasticbeanstalk.com/api/v1/"
    - npm install
    - npm run build-staging
    - echo "BUILD SUCCESSFULLY"
  artifacts:
    paths:
      - dist/
    expire_in: 1 day
  environment:
    name: staging
  only:
    - staging

deploy_prod:
  stage: deploy
  image: python:3.5
  dependencies:
    - build_prod
  script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - export S3_BUCKET_NAME=$S3_BUCKET_NAME
    - export DISTRIBUTION_ID=$DISTRIBUTION_ID
    - pip install awscli --upgrade --user
    - export PATH=~/.local/bin:$PATH
    - aws s3 sync --acl bucket-owner-full-control --delete dist $S3_BUCKET_NAME
    - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*'
    - echo "DEPLOYED SUCCESSFULLY"
  environment:
    name: production
    url: http://moresneakers.com.s3-website.eu-west-3.amazonaws.com
  only:
    - tags
  except:
    - branches

deploy_staging:
  stage: deploy
  image: python:3.5
  dependencies:
    - build_staging
  script:
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - export S3_BUCKET_NAME=$S3_BUCKET_NAME_STAGING
    - export DISTRIBUTION_ID=$DISTRIBUTION_ID_STAGING
    - pip install awscli --upgrade --user
    - export PATH=~/.local/bin:$PATH
    - aws s3 sync --acl bucket-owner-full-control --delete dist $S3_BUCKET_NAME
    - aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*'
    - echo "DEPLOYED SUCCESSFULLY"
  environment:
    name: staging
    url: http://staging.backoffice.moresneakers.com.s3-website.eu-west-3.amazonaws.com
  only:
    - staging
